name: Android CI/CD  

on:  
  push:  
    branches: [ main ]  
    tags:  
      - 'v*'  
  pull_request:  
    branches: [ main ]  

jobs:  
  validate:  
    name: Validate Project  
    runs-on: ubuntu-latest  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v3  

      - name: Set up JDK 17  
        uses: actions/setup-java@v3  
        with:  
          java-version: '17'  
          distribution: 'temurin'  
          cache: gradle  

      - name: Validate Gradle wrapper  
        uses: gradle/wrapper-validation-action@v1  

      - name: Setup Gradle  
        uses: gradle/gradle-build-action@v2  

      - name: Check code style  
        run: ./gradlew ktlintCheck  

  test:  
    name: Run Tests  
    needs: validate  
    runs-on: ubuntu-latest  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v3  

      - name: Set up JDK 17  
        uses: actions/setup-java@v3  
        with:  
          java-version: '17'  
          distribution: 'temurin'  
          cache: gradle  

      - name: Setup Gradle  
        uses: gradle/gradle-build-action@v2  

      - name: Run unit tests  
        run: ./gradlew test  

      - name: Upload test results  
        if: always()  
        uses: actions/upload-artifact@v3  
        with:  
          name: test-results  
          path: app/build/reports/tests/  

  build:  
    name: Build Project  
    needs: test  
    runs-on: ubuntu-latest  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v3  

      - name: Set up JDK 17  
        uses: actions/setup-java@v3  
        with:  
          java-version: '17'  
          distribution: 'temurin'  
          cache: gradle  

      - name: Setup Gradle  
        uses: gradle/gradle-build-action@v2  

      - name: Decode Keystore  
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')  
        env:  
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}  
        run: |  
          mkdir -p keystore  
          echo $ENCODED_KEYSTORE | base64 -d > keystore/release.keystore  

      - name: Build project  
        env:  
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}  
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}  
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}  
        run: |  
          if [ "${{ github.ref }}" == "refs/heads/main" ] || [[ "${{ github.ref }}" == refs/tags/v* ]]; then  
            ./gradlew assembleRelease bundleRelease  
          else  
            ./gradlew assembleDebug  
          fi  

      - name: Upload APK  
        uses: actions/upload-artifact@v3  
        with:  
          name: app-release  
          path: |  
            app/build/outputs/apk/release/app-release.apk  
            app/build/outputs/bundle/release/app-release.aab  

  deploy:  
    name: Deploy to Play Store  
    needs: build  
    if: startsWith(github.ref, 'refs/tags/v')  
    runs-on: ubuntu-latest  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v3  

      - name: Download APK  
        uses: actions/download-artifact@v3  
        with:  
          name: app-release  
          path: app/build/outputs/  

      - name: Setup Ruby  
        uses: ruby/setup-ruby@v1  
        with:  
          ruby-version: '3.1.0'  
          bundler-cache: true  

      - name: Setup Fastlane  
        run: |  
          gem install bundler  
          bundle config path vendor/bundle  
          bundle install --jobs 4 --retry 3  

      - name: Configure Play Store  
        env:  
          PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }}  
        run: echo $PLAY_STORE_CONFIG_JSON > play-store-config.json  

      - name: Deploy to Play Store  
        env:  
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}  
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}  
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}  
        run: bundle exec fastlane deploy  

      - name: Create GitHub Release  
        uses: softprops/action-gh-release@v1  
        with:  
          files: |  
            app/build/outputs/apk/release/app-release.apk  
            app/build/outputs/bundle/release/app-release.aab  
          draft: false  
          prerelease: false  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}